一、基础知识
1.Go语言数据类型有哪些？
    在Golang中数据类型分为基本数据类型和派生数据类型。
    基本数据类型包括：
    (1)数值类型，包括整型、浮点和其他数值类型：
        (a)整型（int8、int16、int32、int64、uint8、uint16、uint32、uint64）；
        (b)浮点型（float32、float64、complex64、complex128）；
        (c)其他数值类型（int、uint、byte、rune、uintptr）。
    (2)布尔类型（bool）；
    (3)字符串类型（string）。
    派生数据类型包括：
    (1)指针类型；
    (2)数组类型；
    (3)结构体类型（struct）；
    (4)切片类型（slice）；
    (5)Map类型（map）；
    (6)Channel类型（channel）；
    (7)接口类型（interface）；
    (8)函数类型（func）；
2.Go程序中的包是什么？
    在Golang中使用包来组织代码，包是多个代码文件的集合，是一种高级的代码复用方案。包拥有以下几个特性：
    （1）任何代码文件的非注释第1行必须声明自己所在的包，包名必须小写；
    （2）一个可独立执行的程序，有且只能有1个main包；
    （3）同一代码文件目录下，只能有1个包；
    （4）在编译时，属于同一个包的代码文件会被全部编译，生成.o文件。
3.Go支持什么形式的类型转换？
    在Golang中支持显式类型转换、隐式类型转换和接口断言三种形式的类型转换。
    （1）显式类型转换
        var a int8
        b := int16(a)
    （2）隐式类型转换
        func fn(a interface{}) {
        }

        func main() {
            var a int8 = 34
            fn(a)
        }
    （3）类型断言
        func fn2(a int) {
        }

        func fn1(a interface{}) {
            i, ok := a.(int)
            if ok {
                fn2(i)
            }
        }

        func main() {
            fn1(45)
        }
4.可以使用cap()函数的数据类型？
    （1）数组类型：获取数组的元素数量；
    （2）数组指针类型：获取指向的数组的元素数量；
    （3）切片类型：获取切片的最大容量；
    （4）Channel类型：获取channel缓冲区的容量
5.make和new有什么区别
    （1）make只能用于slice、map和channel三种类型的内存分配和初始化，而new可用于任意类型的内存分配；
    （2）make返回值类型为函数传入的指定类型，而new返回值为函数传入类型的指针类型；
6.Go语言中值传递和地址传递（引用传递）有什么区别？
    在Golang中所有参数均是值传递，即使参数为指针，也是指针的副本或拷贝。
    如果参数为引用类型（指针、slice、map、channel等），可在函数内修改原值；反之，在函数哪无法修改原值。
7.